import { useToast } from '@/hooks/use-toast';
import { Trophy, Star, Zap, Target, Heart } from 'lucide-react';

const motivationalMessages = [
  {
    title: "Parab√©ns! üéâ",
    description: "Mais uma refei√ß√£o conclu√≠da com sucesso!",
    icon: Trophy
  },
  {
    title: "Excelente! ‚≠ê",
    description: "Voc√™ est√° no caminho certo para seus objetivos!",
    icon: Star
  },
  {
    title: "Incr√≠vel! ‚ö°",
    description: "Sua consist√™ncia √© admir√°vel!",
    icon: Zap
  },
  {
    title: "Foco total! üéØ",
    description: "Cada refei√ß√£o te aproxima da sua meta!",
    icon: Target
  },
  {
    title: "Que dedica√ß√£o! ‚ù§Ô∏è",
    description: "Cuidar da sua sa√∫de √© um ato de amor pr√≥prio!",
    icon: Heart
  }
];

const mealCompletionMessages = [
  {
    title: "Refei√ß√£o 100% completa! üèÜ",
    description: "Todos os alimentos foram consumidos. Excelente trabalho!",
    icon: Trophy
  },
  {
    title: "Meta atingida! üéØ",
    description: "Voc√™ concluiu toda a refei√ß√£o planejada!",
    icon: Target
  },
  {
    title: "Perfeito! ‚≠ê",
    description: "Refei√ß√£o completa significa nutri√ß√£o completa!",
    icon: Star
  }
];

const streakMessages = [
  {
    title: "Sequ√™ncia mantida! üî•",
    description: "Voc√™ est√° construindo um h√°bito saud√°vel!",
    icon: Zap
  },
  {
    title: "Consist√™ncia premiada! üèÖ",
    description: "Cada dia conta para seu sucesso!",
    icon: Trophy
  }
];

export function useMotivationalToast() {
  const { toast } = useToast();

  const showFoodCompletionToast = () => {
    const message = motivationalMessages[Math.floor(Math.random() * motivationalMessages.length)];
    
    toast({
      title: message.title,
      description: message.description,
      duration: 3000,
    });
  };

  const showMealCompletionToast = () => {
    const message = mealCompletionMessages[Math.floor(Math.random() * mealCompletionMessages.length)];
    
    toast({
      title: message.title,
      description: message.description,
      duration: 4000,
    });
  };

  const showStreakToast = (days: number) => {
    const message = streakMessages[Math.floor(Math.random() * streakMessages.length)];
    
    toast({
      title: message.title,
      description: `${message.description} ${days} dias seguidos!`,
      duration: 4000,
    });
  };

  const showDailyGoalToast = () => {
    toast({
      title: "Meta di√°ria alcan√ßada! üéâ",
      description: "Todas as refei√ß√µes do dia foram conclu√≠das!",
      duration: 5000,
    });
  };

  return {
    showFoodCompletionToast,
    showMealCompletionToast,
    showStreakToast,
    showDailyGoalToast
  };
}